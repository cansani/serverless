# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: cansanidevelopment
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: first-serverless
# "service" is the name of this project. This will also be added to your AWS resource names.
service: first-serverless

plugins:
  - serverless-offline

useDotenv: true

params:
  default:
    connectionString: ${env:DATABASE_URL}
    dbName: ${env:DB_NAME}
    jwtSecret: ${env:JWT_SECRET}
    

provider:
  name: aws
  runtime: nodejs20.x
  environment:
    MONGO_DB_CONN_STR: ${param:connectionString}
    MONGO_DB_NAME: ${param:dbName}
    JWT_SECRET: ${param:jwtSecret}

functions:
  firstFunction:
    handler: functions/firstFunction.firstFunction
    events:
      - httpApi:
          path: /
          method: get

  createUser:
    handler: functions/createUser.createUser
    events:
      - httpApi:
          path: /users
          method: post

  getUserById:
    handler: functions/getUserById.getUserById
    events:
      - httpApi:
          path: /users/{id}
          method: get

  getUsers:
    handler: functions/getUsers.getUsers
    events:
      - httpApi:
          path: /users
          method: get

  updateUser:
    handler: functions/updateUser.updateUser
    events:
      - httpApi:
          path: /users/{id}
          method: patch

  deleteUser:
    handler: functions/deleteUser.deleteUser
    events:
      - httpApi:
          path: /users/{id}
          method: delete
  
  signIn:
    handler: functions/signIn.signIn
    events:
      - httpApi:
          path: /sessions
          method: post

  getAuthenticatedUser:
    handler: functions/getAuthenticatedUser.getAuthenticatedUser
    events:
      - httpApi:
          path: /me
          method: get